#Covariance with correction
covariance <- 0
for(i in 1:n){
covariance <- covariance + newX[i] * newY[i]
}
covariance <- covariance / (n-1)
covariance
#OR we can use the function cov
mynewdataset <- data.frame(newX,newY)
covariance <- cov(mynewdataset)
covariance
#Solve the characteristic equation to get the eigenvalues and deduce the
#eigenvectors, then compute the  2 first componants.
E <- eigen(covariance)
E$vectors
E$values
Component1 <- (E$vectors[1]/E$vectors[2])*newX
Component1
Component2 <- (E$vectors[3]/E$vectors[4])*newY
Component2
#Plot the scatterplot of the dataset, then the first 2 components
#They will intersect perpendicularly (on an orthogonal graph)
win.graph(800,600,10)
plot(mynewdataset$newX, mynewdataset$newY,
col="black", xlim=c(-6,6), ylim=c(-6,6), asp =1)
par(new=TRUE)
plot(mynewdataset$newX, Component1, xlab="", ylab="",
col="blue", type="l", xlim=c(-6,6), ylim=c(-6,6), asp =1)
par(new=TRUE)
plot(mynewdataset$newY, Component2, xlab="", ylab="",
col="red", type="l", xlim=c(-6,6), ylim=c(-6,6), asp =1)
#Plot the biplot of the PCA obtained with teh function princomp
mynewdataset.pca <- princomp(mynewdataset)
win.graph(800,600,10)
biplot(mynewdataset.pca)
#PCA on a High-Dimensional Dataset
#Load the excel dataset, label each row with the col of name, then remove unnecessary col
rm(list=ls())
students <- readWorksheet(loadWorkbook("C:/Users/amsch/Documents/MLDM/Data Analysis/Lab/students_2015.xlsx"), sheet=1)
students
names <- students[,1]
rownames(students) <- names
students[,1] <- NULL
students
#Descriptive Statistics
#We can print some useful info about the dataset
#Summary
summary(students)
#Number of observations
n <- nrow(students)
print(n)
#Object Properties
attributes(students)
#Pairwise Representation, 2D-Study
#By plotting the scatterplot matrices with the function pairs(), we can study the relation between the vars two by two
students$LatBP_NS <- as.numeric(students$LatBP_NS)
students$Long_BP_EW <- as.numeric(students$Long_BP_EW)
pairs(students)
cor(students)
#Age and NbDays are have very strong correlation becuase Age is NbDays/365.25
#Lets plot that in a new window
win.graph(800,600,10)
plot(students$NbDays, students$Age,
xlim=c(7700,12000), ylim=c(20,32))
par(new=TRUE)
x <- seq(7700,12000, length=2000)
y <- floor(x/365.25)
plot(x,y, col = "red", type="l", xlab="", ylab="",
xlim=c(7700,12000), ylim=c(20,32))
#PCA with princomp function
#We will compute the PCA with the parameters cor=TRUE for indicating that the calc should
#use the correlation and scores = TRUE for indicating that the score on each princ comp needs to be calc
pca.students <- princomp(students, cor = TRUE, scores =TRUE)
pca.students
summary(pca.students)
attributes(pca.students)
#Eigenvalues (3.5)
#We can now calculate and print the variances associated with the axis and plotting the scree plot
eigenvalues <- pca.students$sdev^2
eigenvalues
plot(1:4,eigenvalues, type="b", ylab="Eigenvalues",
xlab = "Components", main="Scree_Plot")
plot(1:4,eigenvalues, type="b", ylab="Eigenvalues",
xlab = "Components", main="Scree_Plot")
val.low <- eigenvalues*exp(1.96 * sqrt(2.0/(n-1)))
val.low
val.high <- eigenvalues*exp(+1.96 * sqrt(2.0/(n-1)))
table <- cbind(val.low,eigenvalues,val.high)
colnames(table) <- c("Lower_Bound", "EigenValues", "Higher_Bound")
print(table, digits = 3)
c1 <- pca.students$loadings[,1]*pca.students$sdev[1]
c2 <- pca.students$loadings[,2]*pca.students$sdev[2]
correlation <- cbind(c1,c2)
print(correlation,digits=2)
print(correlation^2,digits=2)
print(t(apply(correlation^2,1,cumsum)),digits=2)
plot(c1,c2,xlim=c(-1,1),ylim=c(-1,1),type="n")
abline(h=0,v=0)
plot(c1,c2,xlim=c(-1,1),ylim=c(-1,1),type="n")
abline(h=0,v=0)
text(c1,c2,labels=colnames(students),cex=1,col="red")
symbols(0,0,circles=1,inches=FALSE,add=TRUE)
win.graph(800,600,10)
plot(c1,c2,xlim=c(-1,1),ylim=c(-1,1),type="n")
abline(h=0,v=0)
text(c1,c2,labels=colnames(students),cex=1,col="red")
symbols(0,0,circles=1,inches=FALSE,add=TRUE)
plot(pca.students$scores[,1],
pca.students$scores[,2],
type="n", xlab = "Comp.1", ylab = "Comp.2")
abline(h=0,v=0)
text(pca.students$scores[,1],
pca.students$scores[,2],
labels = rownames(students), cex=.75)
biplot(pca.students, cex=.75)
summary(pca.students)
library(rgl)
library("rgl")
library("rgl")
plot3d(x = pca.students$scores[,1],
y=pca.students$scores[,2],
z=pca.students$scores[,3],
xlab="Comp.1",
ylab="Comp.2",
zlab="Comp.3")
text3d(x=pca.students$scores[,1],
y=pca.students$scores[,2],
z=pca.students$scores[,3],
xlab="",
ylab="",
zlab="",
text=names,
cex=.8,
col="blue")
totals <- matrix(c(7750,7630,31500,333,276000),ncol=1)
#Number of people served from each
serves <- c(8,10,5,6)
#butter amunt
butter <- c(150,50,0,120)
#sugar amount
sugar <- c(70,20,60,120)
#flour amount
flour <- c(400,250,0,1000)
#egg amount
eggs <- c(3,4,5,4)
#milk amount
milk <- c(80,500,600,300)
#recipes per serving
poundCake <- c(6,125,125,125,2,0)
kouglof  <- c(8,150,70,400,3,80)
crepes <- c(10,50,20,250,4,500)
floatingIsland <- c(5,0,60,0,5,600)
beignets <- c(6,120,120,1000,4,300)
#system of linear equations
lin_eq <- rbind(butter,sugar,flour,eggs,milk)
lin_eq
#solving the system of linear equations with total
recipeAmounts <- solve(lin_eq,totals)
recipeAmounts
install.packages('wordcloud')
install.packages('RColorBrewer')
library(wordcloud)
install.packages('RColorBrewer')
install.packages("RColorBrewer")
library(wordcloud)
library('wordcloud')
install.packages('slam')
library('wordcloud')
library(tm)
(wordcloud)
library(wordcloud)
library(slam)
install.packages('slam')
library(slam)
library(wordcloud)
install.packages('wordcloud', dependencies = TRUE)
library(wordcloud)
install.packages('tm', dependencies = TRUE)
library(wordcloud)
sudo apt-get install r-cran-slam
sessionInfo()
install.packages("installr") # install
setInternet2(TRUE) # only for R versions older than 3.3.0
installr::updateR() # updating R.
sessionInfo()
install.packages("installr") # install
setInternet2(TRUE) # only for R versions older than 3.3.0
installr::updateR() # updating R.
install.packages("installr")
sessionInfo()
install.packages("installr") # install
setInternet2(TRUE) # only for R versions older than 3.3.0
installr::updateR() # updating R.
install.packages("installr") # install
setInternet2(TRUE) # only for R versions older than 3.3.0
installr::updateR() # updating R.
install.packages("wordcloud")
library(wordcloud)
sessionInfo()
sessionInfo()
install.packages("wordcloud")
library(wordcloud)
read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv')
read.csv('C:\Users\amsch\Documents\FKBY\wordcloud.csv')
wordData <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv')
library(RColorBrewer)
wordData <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud.png"width=1000,height=1000)
png("wordcloud.png",width=1000,height=1000)
sessionInfo()
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
dev.off()
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud.png",width=1000,height=1000)
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
dev.off()
cloud
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
dev.off()
png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
dev.off()
png
?wordcloud
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
#png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
pal <- brewer.pal(9,"YlGnBu")
pal <- pal[-(1:4)]
set.seed(123)
wordcloud(datain$term,datain$freq,, scale=c(5,0.1), max.words=100, random.order=FALSE,
rot.per=0.35, use.r.layout=FALSE, colors=pal)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal <- brewer.pal(9,"YlGnBu")
pal <- pal[-(1:4)]
set.seed(123)
wordcloud(words=datain$term,freq=datain$freq,, scale=c(5,0.1), max.words=100, random.order=FALSE,
rot.per=0.35, use.r.layout=FALSE, colors=pal)
cloud<- wordcloud(words=datain$term,freq=datain$freq, scale=c(5,0.1), max.words=100, random.order=FALSE,
rot.per=0.35, use.r.layout=FALSE, colors=pal)
View(datain)
wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wc <- wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
#png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
dev.off()
png("wordcloud.png",width=1000,height=1000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
dev.off()
png("wordcloud.png",width=10000,height=10000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
dev.off()
png("wordcloud.png",width=10000,height=10000)
wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
dev.off()
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
png("wordcloud.png",width=500,height=500)
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, use.r.layout=FALSE,colors=pal2)
cloud<-wordcloud(datain$term,datain$freq, scale=c(8,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
View(datain)
wc <- wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=800, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wc <- wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=8000, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
?wordcloud
wc <- wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=24, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
View(datain)
datain <- read.csv('C:/Users/amsch/Documents/FKBY/wordcloud.csv',colClasses = c("character","numeric"))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud.png",width=1000,height=1000)
cloud<-wordcloud(datain$term,datain$freq, scale=c(100,.4),min.freq=1, max.words=Inf, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
png("wordcloud.png",width=10000,height=10000)
wordcloud(words = datain$term, freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
View(datain)
View(datain)
wordcloud(words = datain$term, scale=c(100,1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, scale=c(100,100),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, scale=c(5,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
View(datain)
wordcloud(words = datain$term, scale=c(100,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, scale=c(1,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.1,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, scale=c(1,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = datain$term, scale=c(1,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark3"))
wordcloud(words = datain$term, scale=c(1,.1),freq = datain$freq, min.freq = 1,
max.words=Inf, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
data("iris")
mydata <- iris[1:4]
data("iris")
mydata <- iris[1:4]
class <- as.matrix(iris[5])
summar(iris)
summary(iris)
help(iris)
cor(iris[1:4])
pairs(mydata)
pairs(iris[1:4], pch=21, bg=c("red","green3","blue")[unclass(iris$Species)])
iris.pca <- prcomp(iris[1:4])
summary(iris.pca)
iris.pca
pairs(iris.pca$x, main="PCA_Plot", font.main=4. pch=19)
pairs(iris.pca$x, main="PCA_Plot", font.main=4, pch=19)
win.graph(800,600,10)
pairs(iris.pca$x, main="PCA_Plot", font.main=4, pch=19)
plot(iris.pca$x, main="PCA_Plot", font.main=4, pch=19)
plot(iris.pca$x, main="PCA-Plot", font.main=4,pch=21,
bg=c("red","green3","blue")[unclass(iris$Species)])
iris.pca2 <- princomp(iris[1:4])
iris.pca2
win.graph(800,600,10)
biplot(iris.pca2)
summary(iris.pca2)
win.graph(800,600,10)
biplot(iris.pca2)
summary(iris.pca2)
iris.zs <- iris
iris.zs <- iris
for (i in 1:4){
iris.zs[i] <- (iris.zs[i] - sapply(iris.zs[i],mean)
/ sapply(iris.zs[i],sd))
}
normalize <- function(row) { (row - mean(row))/ sd(row)}
iris_zs <- apply(iris,2,normalize)
normalize <- function(row) { (row - mean(row))/ sd(row)}
iris_zs <- apply(iris,2,normalize)
View(iris)
iris_zs <- apply(iris[1:4],2,normalize)
cl <- kmeans(iris[1:4], 3)
plot(cl)
cl <- kmeans(iris[1:4], 3)
plot(cl)
print(cl)
plot(iris[3:4], col = cl$cluster)
cl.z <- kmenas(iris_zs[1:4],3)
cl.z <- kmeans(iris_zs[1:4],3)
print(cl.z)
plot(iris_za[3:4], col = cl$cluster)
plot(iris_z[3:4], col = cl$cluster)
plot(iris_zs[3:4], col = cl$cluster)
plot(iris_zs[3:4], col = cl.z$cluster)
print(cl.z)
plot(iris[3:4], col = cl.z$cluster)
plot(iris.zs[3:4], col = cl.z$cluster)
plot(iris.zs[3:4], col = cl.z$cluster)
plot(iris.zs[3:4], col = cl.z$cluster)
hc <- hclust(dist(iris[1:4]), "ave")
print(hc)
plot(hc)
hc2 <- hclust(dist(iris[1:4]), "ward", method="maximum")
hc2 <- hclust(dist(iris[1:4]), "ward", method="manhattan")
hc2 <- hclust(dist(iris[1:4]), "ward")
plot(hc2)
library(rpart)
set.seed(2568)
n <- nrow(iris)
train <- sort(sample(1:n, floor(n/2)))
iris.train <- iris[train,]
iris.test <- iris[-train,]
help(rpart)
help(rpart)
iris.rp <- rpart(class ~.,
data = iris[1:4],
subset = train,
method = "class",
parms = list(split="information"),
maxsurrogate=0,
cp=0,
minsplit=5,
minbucket=2,)
summary(iris.rp)
iris.rp <- rpart(class ~.,
data = iris[1:4],
subset = train,
method = "class",
parms = list(split="information"),
maxsurrogate=0,
cp=0,
minsplit=5,
minbucket=2)
summary(iris.rp)
win.graph(800,600,10)
plot(iris.rp,
uniform = TRUE,
compress = TRUE,
margin = .2)
text(iris.rp,
use.n=TRUE,
all=TRUE,
fancy = TRUE)
win.graph(800,600,10)
plot(iris.rp,
uniform = TRUE,
compress = TRUE,
margin = .2)
text(iris.rp,
use.n=TRUE,
all=TRUE,
fancy = TRUE)
pred.rp <- predict(iris.rp,
newdata = iris[-train,],
type="class")
pred.rp
predict(iris.rp,
newdata = iris[-train,],
type="prob")
predict(iris.rp,
newdata = iris[-train,],
type="prob")
predict(iris.rp,
newdata = iris[-train,],
type="vector")
predict(iris.rp,
newdata = iris[-train,],
type="matrix")
table(class[-train], pred.rp)
library(class)
data(iris3)
train <- rbind(iris3[1:25,,1],iris[1:25,,2],iris3[1:25,,3])
test <- rbind(iris3[26:50,,1],iris3[26:50,,2],iris3[26:50,,3])
train <- rbind(iris3[1:25,,1],iris[1:25,,2],iris3[1:25,,3])
train <- rbind(iris3[1:25,,1],iris3[1:25,,2],iris3[1:25,,3])
test <- rbind(iris3[26:50,,1],iris3[26:50,,2],iris3[26:50,,3])
cl <- factor(c(rep("Setosa",25), rep("Veriscolor",25),rep("Virginica",25)))
pred <- knn(train,test,cl,k=3)
table(pred,cl)
x <- 1:10
y <- x + c(-.5,.5)
plot(x,y)
#simple linear regression
model1 <- lm(y~x)
lines(x, predict(model1, data.frame(x)), lty=1, col="blue")
moddel2 <- lm(y~poly(x,3))
lines(x, predict(model3, data.frame(x)), lty=1, col="green")
lines(x, predict(model2, data.frame(x)), lty=1, col="green")
model2 <- lm(y~poly(x,3))
lines(x, predict(model2, data.frame(x)), lty=1, col="green")
lines(x, predict(model3, data.frame(x)), lty=1, col="red")
model3 <- lm(y~poly(x,9))
lines(x, predict(model3, data.frame(x)), lty=1, col="red")
setwd('C:/Users/amsch/Documents/MLDM/Data Mining/Practical Session/Data')
wisc <- read.csv("breast_cancer_wisconsin.data", header = FALSE, quote = "")
summary(wisc)
View(wisc)
View(wisc)
cor(wisc[2:10])
str(wisc[2:10])
n <- nrow(wisc)
nb_ac <- ncol(wisc)
nb_at <- ncol(wisc)
p <- nb_at - 1
wisc.ok <- wisc
for(i in 1:n){
for(j in 1:p){
if(wisc[i,j]=="?"){
wisc.ok[i,j] <- NA
}
}
}
for(i in 1:n)
for(j in 1:p)
if(wisc[i,j]=="?")
wisc.ok[i,j] <- NA
wisc.ok[1:p] <- lapply(wisc.ok[1:p], FUN = as.numeric)
str(wisc.ok)
